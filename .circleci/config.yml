version: 2.1

commands:
  prepare:
    steps:
      - checkout
      - run:
          name: Setup php.ini file
          command: |
            sudo touch /usr/local/etc/php/php.ini
            echo "memory_limit = -1" | sudo tee -a /usr/local/etc/php/php.ini
            echo "display_startup_errors = On" | sudo tee -a /usr/local/etc/php/php.ini
            echo "xdebug.mode = coverage" | sudo tee -a /usr/local/etc/php/php.ini
            echo "xdebug.force_display_errors = On" | sudo tee -a /usr/local/etc/php/php.ini
            echo "error_reporting = E_ALL ^ E_DEPRECATED" | sudo tee -a /usr/local/etc/php/php.ini
            echo "xdebug.force_error_reporting = E_ALL ^ E_DEPRECATED" | sudo tee -a /usr/local/etc/php/php.ini
            echo "detect_unicode = Off" | sudo tee -a /usr/local/etc/php/php.ini
            sudo docker-php-ext-install mysqli
            sudo apt-get update
            sudo composer self-update
            sudo apt-get install -y subversion default-mysql-client
      - restore_cache:
          keys:
            - composer-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "composer.json" }}
            - composer-v1-{{ .Environment.CIRCLE_JOB }}
      - run: composer validate --strict
      - run: composer install -n --prefer-dist
      - run: composer update --prefer-dist --no-interaction
      - persist_to_workspace:
          root: .
          paths:
            - composer.*
            - .snyk
      - save_cache:
          key: composer-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "composer.json" }}
          paths:
            - vendor
  run-checks:
    steps:
      - run: composer analyze
      - run: composer lint
  run-tests:
    steps:
      - run:
          name: Wait for DB
          command: |
            dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
            bash bin/install-wp-tests.sh wordpress_test root '' 127.0.0.1 5.4.2
      - run: composer test-ci
      - store_artifacts:
          path: coverage.xml

jobs:
  php_7_3:
    docker:
      - image: circleci/php:7.3
      - image: circleci/mysql:5.6
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
    steps:
      - prepare
      - run-checks
      - run-tests
      - run:
          command: bash <(curl -s https://codecov.io/bash)
          when: on_success
  php_7_4:
    docker:
      - image: circleci/php:7.4
      - image: circleci/mysql:5.6
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
    steps:
      - prepare
      - run-checks
      - run-tests
  snyk:
    docker:
      - image: snyk/snyk-cli:composer
    steps:
      - attach_workspace:
          at: .
      - run: snyk test
      - run:
          command: |
            if [[ "${CIRCLE_BRANCH}" == "master" ]]
            then
            snyk monitor --org=auth0-sdks
            fi
          when: always

# Each workflow represents a Github check
workflows:
  build-and-test:
    jobs:
      - php_7_3
      - php_7_4
      - snyk:
          # Must define SNYK_TOKEN env
          context: snyk-env
          requires:
            - php_7_3
